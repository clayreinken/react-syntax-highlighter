{"version":3,"sources":["webpack:///./node_modules/refractor/lang/smarty.js"],"names":["smarty","Prism","languages","comment","delimiter","pattern","alias","string","number","variable","lookbehind","function","attr-name","inside","operator","punctuation","keyword","insertBefore","smarty-comment","hooks","add","env","smartyLitteralMode","buildPlaceholders","match","tokenizePlaceholders","module","exports","displayName","aliases"],"mappings":"4FAKA,SAAAA,EAAAC,IAKG,SAAAA,GACHA,EAAAC,UAAAF,OAAA,CACAG,QAAA,mBACAC,UAAA,CACAC,QAAA,WACAC,MAAA,eAEAC,OAAA,mCACAC,OAAA,2DACAC,SAAA,CACA,cACA,cACA,CACAJ,QAAA,mBACAK,YAAA,GAEA,CACAL,QAAA,sBACAK,YAAA,IAGAC,SAAA,CACA,CACAN,QAAA,qBACAK,YAAA,GAEA,gBACA,mBAEAE,YAAA,CAEAP,QAAA,2BACAQ,OAAA,CACAJ,SAAA,CACAJ,QAAA,kBACAK,YAAA,GAEAI,SAAA,MAGAC,YAAA,oBACAD,SAAA,CACA,mCACA,iDACA,kDAEAE,QAAA,oCAIAf,EAAAC,UAAAe,aAAA,gBACAC,iBAAA,CACAb,QAAA,mBACAC,MAAA,wBAIAL,EAAAkB,MAAAC,IAAA,2BAAAC,GACA,IAGAC,GAAA,EACArB,EAAAC,UAAA,qBAAAqB,kBACAF,EACA,SANA,iCAQA,SAAAG,GAKA,MAXA,eAQAA,IACAF,GAAA,IAEAA,IAZA,cAaAE,IACAF,GAAA,IAEA,OAOArB,EAAAkB,MAAAC,IAAA,0BAAAC,GACApB,EAAAC,UAAA,qBAAAuB,qBAAAJ,EAAA,YAnFG,CAqFApB,GA7FHyB,EAAAC,QAAA3B,EACAA,EAAA4B,YAAA,SACA5B,EAAA6B,QAAA","file":"react-syntax-highlighter_languages_refractor_smarty-build.js","sourcesContent":["'use strict'\n\nmodule.exports = smarty\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\nfunction smarty(Prism) {\n  /* TODO\nAdd support for variables inside double quoted strings\nAdd support for {php}\n*/\n  ;(function(Prism) {\n    Prism.languages.smarty = {\n      comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n      delimiter: {\n        pattern: /^\\{|\\}$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: [\n        {\n          pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /^\\/?(?!\\d)\\w+/,\n        /(?!\\d)\\w+(?=\\()/\n      ],\n      'attr-name': {\n        // Value is made optional because it may have already been tokenized\n        pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n        inside: {\n          variable: {\n            pattern: /(=\\s*)(?!\\d)\\w+/,\n            lookbehind: true\n          },\n          operator: /=/\n        }\n      },\n      punctuation: [/[\\[\\]().,:`]|->/],\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/\n      ],\n      keyword: /\\b(?:false|off|on|no|true|yes)\\b/\n    }\n    // Comments are inserted at top so that they can\n    // surround markup\n    Prism.languages.insertBefore('smarty', 'tag', {\n      'smarty-comment': {\n        pattern: /\\{\\*[\\s\\S]*?\\*\\}/,\n        alias: ['smarty', 'comment']\n      }\n    })\n    // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function(env) {\n      var smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g\n      var smartyLitteralStart = '{literal}'\n      var smartyLitteralEnd = '{/literal}'\n      var smartyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function(match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLitteralEnd) {\n            smartyLitteralMode = false\n          }\n          if (!smartyLitteralMode) {\n            if (match === smartyLitteralStart) {\n              smartyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    })\n    // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n"],"sourceRoot":""}